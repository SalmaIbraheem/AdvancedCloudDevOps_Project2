Description:  This template deploys an Autoscalling group with a lunch configuration for EC2, 
  TargetGroup, listener to do HealthCheck .


Parameters:
  EnvironmentName:
      Description: An environment name that is prefixed to resource names
      Type: String

  InstanceType:
    Description: "The EC2 instance type"
    Type: String
    AllowedValues: [t2.medium,t3.medium]

  ImageId:
    Description: "The EC2 required Image in this region"
    Type: String

  VolumeSize:
    Description: "The EC2 required Volumn size"
    Type: String
    Default: '10'


Resources:
  WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our hosts and SSH from local only
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  LBSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow http to client host
          VpcId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
  
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo "it works! Udagram, Udacity" > index.html
      ImageId: !Ref ImageId
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref VolumeSize
      # IamInstanceProfile: !Ref ProfileWithReadS3Role

  WebAppAutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
          VPCZoneIdentifier: [
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PRIV1-NETS",
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PRIV2-NETS"
          ]
          LaunchConfigurationName:
              Ref: WebAppLaunchConfig
          MinSize: '4'
          MaxSize: '8'
          TargetGroupARNs: 
          - Ref: WebAppTargetGroup
          HealthCheckGracePeriod: 60
          HealthCheckType: ELB

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-NETS"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-NETS"
      SecurityGroups:
      - Ref: LBSecurityGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

  # s3ReadRole: 
  #   Type: "AWS::IAM::Role"
  #   Properties: 
  #     AssumeRolePolicyDocument: 
  #       Version: "2012-10-17"
  #       Statement: 
  #         - 
  #           Effect: "Allow"
  #           Principal: 
  #             Service: 
  #               - "ec2.amazonaws.com"
  #           Action: 
  #             - "sts:AssumeRole"
  #     Path: "/"

  # s3ReadPolicies: 
  #   Type: "AWS::IAM::Policy"
  #   Properties: 
  #     PolicyName: "AmazonS3ReadOnlyAccess"
  #     PolicyDocument: 
  #       Version: "2012-10-17"
  #       Statement: 
  #         - Effect: "Allow"
  #           Action:
  #           - s3:Get*
  #           - s3:List*
  #           Resource: 
  #           - arn:aws:s3:::my-028755748573-project2
  #           - arn:aws:s3:::my-028755748573-project2/*
  #     Roles: 
  #     - Ref: "s3ReadRole"
  
  # ProfileWithReadS3Role:
  #   Type: AWS::IAM::InstanceProfile
  #   Properties:
  #       Path: "/"
  #       Roles:
  #       - Ref: s3ReadRole

Outputs:
  LoadBalancerDNS: 
      Description: load balancer dns to access app
      Value: !Join ['',[ "http://" ,!GetAtt WebAppLB.DNSName]]
      Export:
        Name: !Sub ${EnvironmentName}-AppUrl
